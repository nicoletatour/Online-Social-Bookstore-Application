package myy803.socialbookstore.datamodel.recomstrategies;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Component;

import myy803.socialbookstore.datamodel.UserProfile;
import myy803.socialbookstore.formsdata.BookDTO;

@Component
public class FavouriteAuthorsAndCategoriesIntersectionStrategy extends AbstractRecommendationsStrategy {

	@Override
    protected List<BookDTO> retrieveRecommendedBooks(UserProfile userProfile) {
        // Fetch books from favorite authors and categories
        List<BookDTO> booksFromAuthors = userProfile.getBooksFromFavouriteAuthors();
        List<BookDTO> booksFromCategories = userProfile.getBooksOfFavouriteCategories();

        // Check for null or empty lists to avoid issues
        if (booksFromAuthors == null || booksFromAuthors.isEmpty() || 
            booksFromCategories == null || booksFromCategories.isEmpty()) {
            return new ArrayList<>(); // Return empty list if no intersection is possible
        }

        // Perform intersection to get common books
        booksFromAuthors.retainAll(booksFromCategories);
        return booksFromAuthors;
    }

}
